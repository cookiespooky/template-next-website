
# Microservices Nginx Configuration

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=uploads:10m rate=2r/s;

# Upstream definitions
upstream website {
    server website:3000;
}

upstream payment_service {
    server payment-service:3001;
}

upstream admin_backend {
    server admin-backend:3002;
}

upstream admin_frontend {
    server admin-frontend:3003;
}

upstream blog_backend {
    server blog-backend:3004;
}

upstream blog_frontend {
    server blog-frontend:3005;
}

# Main website
server {
    listen 80;
# CHANGE THIS TO: Your actual domain names
    server_name localhost courseplatform.local;
    
    include /etc/nginx/conf.d/common.conf;
    
    # Main website
    location / {
        proxy_pass http://website;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enable caching for static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://website;
        }
    }
    
    # Payment service API
    location /api/payments/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://payment_service/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials true always;
        
        if ($request_method = OPTIONS) {
            return 204;
        }
    }
    
    # Payment webhooks (no rate limiting for webhooks)
    location /api/payments/webhooks/ {
        proxy_pass http://payment_service/api/webhooks/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Admin panel
server {
    listen 80;
# CHANGE THIS TO: Your actual domain names
    server_name admin.localhost admin.courseplatform.local;
    
    include /etc/nginx/conf.d/common.conf;
    
    # Admin frontend
    location / {
        proxy_pass http://admin_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Security headers for admin panel
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }
    
    # Admin API
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://admin_backend/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials true always;
        
        if ($request_method = OPTIONS) {
            return 204;
        }
    }
    
    # Admin auth endpoints (stricter rate limiting)
    location /api/auth/ {
        limit_req zone=auth burst=10 nodelay;
        
        proxy_pass http://admin_backend/api/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Admin uploads
    location /uploads/ {
        limit_req zone=uploads burst=5 nodelay;
        
        proxy_pass http://admin_backend/uploads/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # File upload settings
        client_max_body_size 50M;
        proxy_request_buffering off;
    }
}

# Blog
server {
    listen 80;
# CHANGE THIS TO: Your actual domain names
    server_name blog.localhost blog.courseplatform.local;
    
    include /etc/nginx/conf.d/common.conf;
    
    # Blog frontend
    location / {
        proxy_pass http://blog_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SEO-friendly caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://blog_frontend;
        }
        
        # Cache HTML for a short time
        location ~* \.(html)$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
            proxy_pass http://blog_frontend;
        }
    }
    
    # Blog API
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://blog_backend/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials true always;
        
        if ($request_method = OPTIONS) {
            return 204;
        }
    }
    
    # Blog uploads
    location /uploads/ {
        proxy_pass http://blog_backend/uploads/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache uploaded images
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # SEO files
    location = /sitemap.xml {
        proxy_pass http://blog_backend/api/sitemap;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        add_header Content-Type application/xml;
        expires 1h;
    }
    
    location = /rss.xml {
        proxy_pass http://blog_backend/api/rss;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        add_header Content-Type application/rss+xml;
        expires 1h;
    }
}

# Health check endpoint
server {
    listen 80;
# CHANGE THIS TO: Your actual domain names
    server_name health.localhost;
    
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Individual service health checks
    location /health/website {
        proxy_pass http://website/api/health;
    }
    
    location /health/payment {
        proxy_pass http://payment_service/api/health;
    }
    
    location /health/admin-backend {
        proxy_pass http://admin_backend/api/health;
    }
    
    location /health/blog-backend {
        proxy_pass http://blog_backend/api/health;
    }
}
